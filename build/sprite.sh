SPRITES_PATH="game/sprite.odin"
SPRITES=$(find sprites -type f)

write() {
	echo -e $@
}

write "// Generated by sprites.sh"
write  "// Do NOT edit manually"
write  ""
write  "package game"
write  ""
write  "import rl \"vendor:raylib\""
write  ""
write "Sprite :: struct {"
write "\twidth : i32,"
write "\theight : i32,"
write "\ttexture : rl.Texture2D,"
write "}"
write ""
write  "SpriteType :: enum {"

for sprite in $SPRITES; do
	enum_name=$(echo $sprite | sed -E "s/sprites\/(.*)\.png/Sprite_\1/")
	write  "\t" $enum_name ,
done

write  "}"
write  ""
write "Sprite_Component :: struct {"
write "\ttransform : Transform_Handle,"
write "\tsprite    : SpriteType,"
write "}"
write ""

write  "make_sprites :: proc() -> [SpriteType]Sprite {"
write  "\tsprites : [SpriteType]Sprite"
write  ""

for sprite in $SPRITES; do
	enum_name=$(echo $sprite | sed -E "s/sprites\/(.*)\.png/Sprite_\1/")
	size=$(magick identify $sprite | sed -E "s/[a-z0-9A-Z/._]* PNG ([0-9]*)x([0-9]*) .*/\1 \2/")
	x=$(echo $size | awk '{print $1}')
	y=$(echo $size | awk '{print $2}')

	write  "\tsprites[.$enum_name] = {"
	write  "\t\twidth = $x,"
	write  "\t\theight = $y,"
		write  "\t\ttexture = rl.LoadTexture(\"$sprite\")"
	write  "\t}"
	write  ""
done

write  "\treturn sprites"
write  "}"
write  ""
write  "delete_sprites :: proc(sprites : [SpriteType]Sprite) {"
for sprite in $SPRITES; do
	enum_name=$(echo $sprite | sed -E "s/sprites\/(.*)\.png/Sprite_\1/")
	write  "\trl.UnloadTexture(sprites[.$enum_name].texture)"
done
write  "}"
write ""
write "update_sprite_component :: #force_inline proc(s : ^Sprite_Component) {"
write "\tt : ^Transform_Component = get_transform_component(s.transform)"
write "\tif t == nil do return"
write "\tdraw_sprite_centre(t.pos, t.size, s.sprite, .LayerWorld, t.rot)"
write "}"
